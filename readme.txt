基于树莓派的二自由度云台控制
一、硬件准备
	树莓派4b 
	驱动板PCA9685
	二自由度云台
	平移舵机和旋转舵机分别是mg90s sg90
二、软件准备
	树莓派配置环境、vnc远程连接等
	相关库的安装
三、程序介绍
	实现效果1:键盘按键控制云台舵机的旋转
	实现效果2:制作gui，实现gui界面控制云台转动，按钮可以区分长短按。短按一次旋转10度，长按时随按下时间旋转。
PCA96835：驱动程序
	在这个文件中完成了相关i2c配置 pwm和舵机旋转角度的转换，相关函数定义这里的频率设置为50Hz pwmsetrotationangle channel 设置用于区分两个舵机的pwm控制
pygame.v：实现键盘控制
	这里实现键盘控制使用的是最简单的pygame库 当检测到键盘键入，相关的舵机角度做出相应的增减。程序中是引入i,j两个变量记录当前舵机位置，再在函数中进行增量控制。
	！需要注意的是，如果使用pygame库作为监听键盘，一定要给程序增加一个窗口，因为pygame需要捕获窗口才能触发监测。另外，如果使用Keyboard库，则在树莓派中安装库的时候，注意在root权限下安装，然后库的版本和你所用python版本要一致，否则无法实现。
Gui实现按键界面控制
我的gui使用的是tkinter制作的，还可以使用pyqt 如果可以我更推荐pyqt
实现的大概逻辑是引入time库中的perf-counter获取系统时间，再用和另一个变量记录按键button-on的时刻，两者做差，如果大于1s则意味着长按，执行连续转动；如果小于1s则每隔10ms检测一次，当button- up时，停止。（这部分使用after函数实现）此外，分别写一个button_down button_up和与<button_release><button_press>关联，再与相关的按钮bind 
长按时，舵机连续转动的实现：由于使用的是tkinter,而Tkinter本来也是一个循环，所以当tkinter里面出现while循环的时候，程序会卡死.另外time.sleep也会卡住，可以用after函数替代。最后我的效果实现是通过将长按的函数bind在相关button上，和检测长短按的函数写在一起，短按另写一个函数，通过command触发，当检测短按的变量置为真时，执行函数。个人感觉虽然目标效果实现了，但这样是有点混乱的，一方面囿于个人编程水平有限，另一方面是受限于tkinter这个库的局限性，这也是我更加推荐pyqt的原因。（当初我看教程说tkinter更简单所以选择了它，殊不知这个简单只是界面的简单、功能的简单，也正是因为简单反而多了很多局限）
	过程中遇到的许多问题参考了CSDN、stackoverflow等一些论坛，深受启发，获益良多。